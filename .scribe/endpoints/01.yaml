name: 'User management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'User management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number of paginated data.'
        required: false
        example: 1
        type: integer
        enumValues: []
        custom: []
      limit:
        name: limit
        description: 'Number of items per page.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      sort:
        name: sort
        description: 'Sort data by created_at field.'
        required: false
        example: desc
        type: string
        enumValues: []
        custom: []
      q:
        name: q
        description: 'Search data by name field and email field.'
        required: false
        example: test
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      page: 1
      limit: 10
      sort: desc
      q: test
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "current_page": 1,
                  "data": [
                      {
                          "id": 7,
                          "email": "User6@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T02:07:51.000000Z",
                          "updated_at": "2023-09-27T02:07:51.000000Z",
                          "user_name": "user6",
                          "full_name": "User 6",
                          "phone": null,
                          "created_by": 1,
                          "updated_by": 1,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 6,
                          "email": "User5@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T02:07:25.000000Z",
                          "updated_at": "2023-09-27T02:07:25.000000Z",
                          "user_name": "user5",
                          "full_name": "User 5",
                          "phone": null,
                          "created_by": 1,
                          "updated_by": 1,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 5,
                          "email": "User4@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T02:06:38.000000Z",
                          "updated_at": "2023-09-27T02:06:38.000000Z",
                          "user_name": "user4",
                          "full_name": "User 4",
                          "phone": null,
                          "created_by": null,
                          "updated_by": null,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 4,
                          "email": "User3@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T02:06:07.000000Z",
                          "updated_at": "2023-09-27T02:06:07.000000Z",
                          "user_name": "user3",
                          "full_name": "User 3",
                          "phone": null,
                          "created_by": 1,
                          "updated_by": 1,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 3,
                          "email": "User2@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T02:02:57.000000Z",
                          "updated_at": "2023-09-27T02:02:57.000000Z",
                          "user_name": "user2",
                          "full_name": "User 2",
                          "phone": null,
                          "created_by": 1,
                          "updated_by": 1,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 2,
                          "email": "User1@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T01:49:16.000000Z",
                          "updated_at": "2023-09-27T01:49:16.000000Z",
                          "user_name": "user1",
                          "full_name": "User 1",
                          "phone": null,
                          "created_by": 1,
                          "updated_by": 1,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": false,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      },
                      {
                          "id": 1,
                          "email": "admin@gmail.com",
                          "email_verified_at": null,
                          "created_at": "2023-09-27T01:43:12.000000Z",
                          "updated_at": "2023-09-27T01:43:12.000000Z",
                          "user_name": "admin",
                          "full_name": "Admin",
                          "phone": null,
                          "created_by": null,
                          "updated_by": null,
                          "role_id": null,
                          "department_id": null,
                          "is_super_admin": true,
                          "is_teacher": false,
                          "status": "enable",
                          "social_id": null,
                          "social_provider": null
                      }
                  ],
                  "first_page_url": "http://127.0.0.1:8000/api/users?page=1",
                  "from": 1,
                  "last_page": 1,
                  "last_page_url": "http://127.0.0.1:8000/api/users?page=1",
                  "links": [
                      {
                          "url": null,
                          "label": "&laquo; Previous",
                          "active": false
                      },
                      {
                          "url": "http://127.0.0.1:8000/api/users?page=1",
                          "label": "1",
                          "active": true
                      },
                      {
                          "url": null,
                          "label": "Next &raquo;",
                          "active": false
                      }
                  ],
                  "next_page_url": null,
                  "path": "http://127.0.0.1:8000/api/users",
                  "per_page": 10,
                  "prev_page_url": null,
                  "to": 7,
                  "total": 7
              },
              "message": "success",
              "status_code": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "data": null,
              "message": "unauthorized",
              "status_code": 401
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |
          {
              "data": null,
              "message": "internal_server_error",
              "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d1aPvDg6e43EkbaVh8Z5c6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'User management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_name:
        name: user_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xxripcgtvcclwwfpfgkbcv
        type: string
        enumValues: []
        custom: []
      full_name:
        name: full_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: qzhenbudaeuludlu
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: miller.bergnaum@example.net
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 255 characters.'
        required: false
        example: flnuhwpkskqsvehxmgqry
        type: string
        enumValues: []
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        custom: []
      department_id:
        name: department_id
        description: ''
        required: false
        example: 3
        type: integer
        enumValues: []
        custom: []
      is_super_admin:
        name: is_super_admin
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      is_teacher:
        name: is_teacher
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      user_name: xxripcgtvcclwwfpfgkbcv
      full_name: qzhenbudaeuludlu
      email: miller.bergnaum@example.net
      phone: flnuhwpkskqsvehxmgqry
      role_id: 14
      department_id: 3
      is_super_admin: true
      is_teacher: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "email": "admin@gmail.com",
                  "email_verified_at": null,
                  "created_at": "2023-09-27T01:43:12.000000Z",
                  "updated_at": "2023-09-27T01:43:12.000000Z",
                  "user_name": "admin",
                  "full_name": "Admin",
                  "phone": "09331213344",
                  "created_by": 1,
                  "updated_by": 1,
                  "role_id": 1,
                  "department_id": 1,
                  "is_super_admin": false,
                  "is_teacher": false,
                  "status": "enable",
                  "social_id": 1,
                  "social_provider": "google"
              },
              "message": "success",
              "status_code": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "data": null,
              "message": "unauthorized",
              "status_code": 401
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |
          {
              "data": null,
              "message": "internal_server_error",
              "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dePhaD6gVEc56Zk1843vfba'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user by id'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "email": "admin@gmail.com",
                  "email_verified_at": null,
                  "created_at": "2023-09-27T01:43:12.000000Z",
                  "updated_at": "2023-09-27T01:43:12.000000Z",
                  "user_name": "admin",
                  "full_name": "Admin",
                  "phone": "09331213344",
                  "created_by": 1,
                  "updated_by": 1,
                  "role_id": 1,
                  "department_id": 1,
                  "is_super_admin": false,
                  "is_teacher": false,
                  "status": "enable",
                  "social_id": 1,
                  "social_provider": "google"
              },
              "message": "success",
              "status_code": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "data": null,
              "message": "unauthorized",
              "status_code": 401
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |
          {
              "data": null,
              "message": "internal_server_error",
              "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6eaa4E6vPhf3gb51dkcD8ZV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: est
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_name:
        name: user_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hmh
        type: string
        enumValues: []
        custom: []
      full_name:
        name: full_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mfg
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: charity.lockman@example.org
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mwfqprsotqkvichs
        type: string
        enumValues: []
        custom: []
      role_id:
        name: role_id
        description: ''
        required: false
        example: 9
        type: integer
        enumValues: []
        custom: []
      department_id:
        name: department_id
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        custom: []
      is_super_admin:
        name: is_super_admin
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        custom: []
      is_teacher:
        name: is_teacher
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        custom: []
    cleanBodyParameters:
      user_name: hmh
      full_name: mfg
      email: charity.lockman@example.org
      phone: mwfqprsotqkvichs
      role_id: 9
      department_id: 15
      is_super_admin: true
      is_teacher: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "data": {
                  "id": 1,
                  "email": "admin@gmail.com",
                  "email_verified_at": null,
                  "created_at": "2023-09-27T01:43:12.000000Z",
                  "updated_at": "2023-09-27T01:43:12.000000Z",
                  "user_name": "admin",
                  "full_name": "Admin",
                  "phone": "09331213344",
                  "created_by": 1,
                  "updated_by": 1,
                  "role_id": 1,
                  "department_id": 1,
                  "is_super_admin": false,
                  "is_teacher": false,
                  "status": "enable",
                  "social_id": 1,
                  "social_provider": "google"
              },
              "message": "success",
              "status_code": 200
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "data": null,
              "message": "unauthorized",
              "status_code": 401
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |
          {
              "data": null,
              "message": "internal_server_error",
              "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dbZ1h3f5avekgP8VE66a4cD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: nemo
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: nemo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "data": null,
              "message": "unauthorized",
              "status_code": 401
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |
          {
              "data": null,
              "message": "internal_server_error",
              "status_code": 500
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Da86b6Evak4fe3P5dVZcgh1'
    controller: null
    method: null
    route: null
    custom: []
